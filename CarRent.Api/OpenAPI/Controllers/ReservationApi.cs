/*
 * OpenAPI car rent
 *
 * car rent api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using System.ComponentModel.DataAnnotations;
using OpenAPI.Attributes;
using Microsoft.AspNetCore.Authorization;
using OpenAPI.Models;

namespace OpenAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class ReservationApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Add a new reservation</remarks>
        /// <param name="reservation">Reservation object</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Reservation not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPut]
        [Route("/api/reservation")]
        [ValidateModelState]
        public abstract IActionResult AddReservation([FromBody]Reservation reservation);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Delete an existing reservation</remarks>
        /// <param name="idReservation">The id of the reservation</param>
        /// <response code="400">Invalid reservation value</response>
        [HttpDelete]
        [Route("/api/reservation/{idReservation}")]
        [ValidateModelState]
        public abstract IActionResult DeleteReservationById([FromRoute][Required]long idReservation);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read all reservation</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/reservation")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Reservation>))]
        public abstract IActionResult ReadAllReservation();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read reservation by idReservation</remarks>
        /// <param name="idReservation">The id of the reservation</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/reservation/{idReservation}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Reservation))]
        public abstract IActionResult ReadReservationById([FromRoute][Required]long idReservation);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update an existing reservation</remarks>
        /// <param name="reservation">Reservation object</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Reservation not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPost]
        [Route("/api/reservation")]
        [ValidateModelState]
        public abstract IActionResult UpdateReservation([FromBody]Reservation reservation);
    }
}
