/*
 * OpenAPI car rent
 *
 * car rent api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using System.ComponentModel.DataAnnotations;
using OpenAPI.Attributes;
using Microsoft.AspNetCore.Authorization;
using OpenAPI.Models;

namespace OpenAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class CarApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Add a new car</remarks>
        /// <param name="car">Car object</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Car not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPut]
        [Route("/api/car")]
        [ValidateModelState]
        public abstract IActionResult AddCar([FromBody]Car car);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Delete an existing car</remarks>
        /// <param name="idCar">The id of the car</param>
        /// <response code="400">Invalid car value</response>
        [HttpDelete]
        [Route("/api/car/{idCar}")]
        [ValidateModelState]
        public abstract IActionResult DeleteCarById([FromRoute][Required]long idCar);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read all car classes</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/car/carClass")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<CarClass>))]
        public abstract IActionResult ReadAllCarClasses();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read all car makes</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/car/carMake")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<CarMake>))]
        public abstract IActionResult ReadAllCarMakes();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read all car types</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/car/carType")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<CarType>))]
        public abstract IActionResult ReadAllCarTypes();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read all cars</remarks>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/car")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Car>))]
        public abstract IActionResult ReadAllCars();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Read car by idCar</remarks>
        /// <param name="idCar">The id of the car</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/car/{idCar}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Car))]
        public abstract IActionResult ReadCarById([FromRoute][Required]long idCar);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update an existing car</remarks>
        /// <param name="car">Car object</param>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Car not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPost]
        [Route("/api/car")]
        [ValidateModelState]
        public abstract IActionResult UpdateCar([FromBody]Car car);
    }
}
